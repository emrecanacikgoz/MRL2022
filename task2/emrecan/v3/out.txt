INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: seed - 0
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: train - ['data/tur-train-high']
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: dev - ['data/tur-dev']
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: test - ['data/tur-dev']
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: model - 'checkpoints/transformer/transformer/sigmorphon17-task1-dropout0.3/tur-high-'
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: load - ''
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: bs - 400
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: epochs - 20
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: max_steps - 20000
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: warmup_steps - 4000
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: total_eval - 50
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: optimizer - <Optimizer.adam: 'adam'>
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: scheduler - <Scheduler.warmupinvsqr: 'warmupinvsqr'>
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: lr - 0.001
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: min_lr - 1e-05
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: momentum - 0.9
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: beta1 - 0.9
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: beta2 - 0.98
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: estop - 1e-08
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: cooldown - 0
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: patience - 0
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: discount_factor - 0.5
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: max_norm - 1.0
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: gpuid - [0]
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: loglevel - 'info'
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: saveall - False
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: shuffle - True
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: cleanup_anyway - True
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: dataset - <Data.sigmorphon17task1: 'sigmorphon17task1'>
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: max_seq_len - 128
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: max_decode_len - 128
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: decode_beam_size - 5
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: init - ''
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: dropout - 0.3
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: embed_dim - 256
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: nb_heads - 4
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: src_layer - 4
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: trg_layer - 4
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: src_hs - 1024
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: trg_hs - 1024
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: label_smooth - 0.1
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: tie_trg_embed - False
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: arch - <Arch.transformer: 'transformer'>
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: nb_sample - 2
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: wid_siz - 11
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: indtag - False
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: decode - <Decode.greedy: 'greedy'>
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: mono - False
INFO - 08/03/22 13:39:08 - 0:00:00 - command line argument: bestacc - True
Source: ['<PAD>', '<BOS>', '<EOS>', '<UNK>', ' ', '!', '.', '?', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'k', 'l', 'm', 'n', 'o', 'p', 'r', 's', 't', 'u', 'v', 'y', 'z', 'ç', 'ö', 'ü', 'ğ', 'ı', 'ş', 'ABL(1,PL)', 'ABL(1,PL,RFLX)', 'ABL(1,SG)', 'ABL(1,SG,RFLX)', 'ABL(2,PL)', 'ABL(2,PL,RFLX)', 'ABL(2,SG)', 'ABL(2,SG,RFLX)', 'ABL(3,PL)', 'ABL(3,PL,RFLX)', 'ABL(3,SG)', 'ABL(3,SG,RFLX)', 'ACC(1,PL)', 'ACC(1,PL,RFLX)', 'ACC(1,SG)', 'ACC(1,SG,RFLX)', 'ACC(2,PL)', 'ACC(2,PL,RFLX)', 'ACC(2,SG)', 'ACC(2,SG,RFLX)', 'ACC(3,PL)', 'ACC(3,PL,RFLX)', 'ACC(3,SG)', 'ACC(3,SG,RFLX)', 'BEN(1,PL)', 'BEN(1,PL,RFLX)', 'BEN(1,SG,RFLX)', 'BEN(2,PL)', 'BEN(2,PL,RFLX)', 'BEN(2,SG)', 'BEN(3,PL)', 'BEN(3,PL,RFLX)', 'BEN(3,SG)', 'COM(1,PL)', 'COM(1,PL,RFLX)', 'COM(1,SG)', 'COM(1,SG,RFLX)', 'COM(2,PL)', 'COM(2,PL,RFLX)', 'COM(2,SG)', 'COM(2,SG,RFLX)', 'COM(3,PL)', 'COM(3,PL,RFLX)', 'COM(3,SG)', 'COM(3,SG,RFLX)', 'DAT(1,PL)', 'DAT(1,PL,RFLX)', 'DAT(1,SG)', 'DAT(1,SG,RFLX)', 'DAT(2,PL)', 'DAT(2,PL,RFLX)', 'DAT(2,SG)', 'DAT(2,SG,RFLX)', 'DAT(3,PL)', 'DAT(3,PL,RFLX)', 'DAT(3,SG)', 'DAT(3,SG,RFLX)', 'FUT', 'HAB', 'IMP', 'IND', 'INFR', 'LGSPEC1', 'LOC(1,PL)', 'LOC(1,PL,RFLX)', 'LOC(1,SG)', 'LOC(1,SG,RFLX)', 'LOC(2,PL)', 'LOC(2,PL,RFLX)', 'LOC(2,SG)', 'LOC(3,PL)', 'LOC(3,PL,RFLX)', 'LOC(3,SG)', 'NEC', 'NEG', 'NOM(1,PL)', 'NOM(1,SG)', 'NOM(2,PL)', 'NOM(2,PL,LGSPEC2)', 'NOM(2,SG)', 'NOM(3,PL)', 'NOM(3,SG)', 'PERF', 'PROG', 'PRS', 'PRSP', 'PST', 'Q'], Target: ['<PAD>', '<BOS>', '<EOS>', '<UNK>', ' ', '!', '.', '?', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'k', 'l', 'm', 'n', 'o', 'p', 'r', 's', 't', 'u', 'v', 'y', 'z', 'ç', 'ö', 'ü', 'ğ', 'ı', 'ş']

INFO - 08/03/22 13:39:09 - 0:00:00 - src vocab size 124
INFO - 08/03/22 13:39:09 - 0:00:00 - trg vocab size 36
INFO - 08/03/22 13:39:09 - 0:00:00 - src vocab ['<PAD>', '<BOS>', '<EOS>', '<UNK>', ' ', '!', '.', '?', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'k', 'l', 'm', 'n', 'o', 'p', 'r', 's', 't', 'u', 'v', 'y', 'z', 'ç', 'ö', 'ü', 'ğ', 'ı', 'ş', 'ABL(1,PL)', 'ABL(1,PL,RFLX)', 'ABL(1,SG)', 'ABL(1,SG,RFLX)', 'ABL(2,PL)', 'ABL(2,PL,RFLX)', 'ABL(2,SG)', 'ABL(2,SG,RFLX)', 'ABL(3,PL)', 'ABL(3,PL,RFLX)', 'ABL(3,SG)', 'ABL(3,SG,RFLX)', 'ACC(1,PL)', 'ACC(1,PL,RFLX)', 'ACC(1,SG)', 'ACC(1,SG,RFLX)', 'ACC(2,PL)', 'ACC(2,PL,RFLX)', 'ACC(2,SG)', 'ACC(2,SG,RFLX)', 'ACC(3,PL)', 'ACC(3,PL,RFLX)', 'ACC(3,SG)', 'ACC(3,SG,RFLX)', 'BEN(1,PL)', 'BEN(1,PL,RFLX)', 'BEN(1,SG,RFLX)', 'BEN(2,PL)', 'BEN(2,PL,RFLX)', 'BEN(2,SG)', 'BEN(3,PL)', 'BEN(3,PL,RFLX)', 'BEN(3,SG)', 'COM(1,PL)', 'COM(1,PL,RFLX)', 'COM(1,SG)', 'COM(1,SG,RFLX)', 'COM(2,PL)', 'COM(2,PL,RFLX)', 'COM(2,SG)', 'COM(2,SG,RFLX)', 'COM(3,PL)', 'COM(3,PL,RFLX)', 'COM(3,SG)', 'COM(3,SG,RFLX)', 'DAT(1,PL)', 'DAT(1,PL,RFLX)', 'DAT(1,SG)', 'DAT(1,SG,RFLX)', 'DAT(2,PL)', 'DAT(2,PL,RFLX)', 'DAT(2,SG)', 'DAT(2,SG,RFLX)', 'DAT(3,PL)', 'DAT(3,PL,RFLX)', 'DAT(3,SG)', 'DAT(3,SG,RFLX)', 'FUT', 'HAB', 'IMP', 'IND', 'INFR', 'LGSPEC1', 'LOC(1,PL)', 'LOC(1,PL,RFLX)', 'LOC(1,SG)', 'LOC(1,SG,RFLX)', 'LOC(2,PL)', 'LOC(2,PL,RFLX)', 'LOC(2,SG)', 'LOC(3,PL)', 'LOC(3,PL,RFLX)', 'LOC(3,SG)', 'NEC', 'NEG', 'NOM(1,PL)', 'NOM(1,SG)', 'NOM(2,PL)', 'NOM(2,PL,LGSPEC2)', 'NOM(2,SG)', 'NOM(3,PL)', 'NOM(3,SG)', 'PERF', 'PROG', 'PRS', 'PRSP', 'PST', 'Q']
INFO - 08/03/22 13:39:09 - 0:00:00 - trg vocab ['<PAD>', '<BOS>', '<EOS>', '<UNK>', ' ', '!', '.', '?', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'k', 'l', 'm', 'n', 'o', 'p', 'r', 's', 't', 'u', 'v', 'y', 'z', 'ç', 'ö', 'ü', 'ğ', 'ı', 'ş']
INFO - 08/03/22 13:39:09 - 0:00:00 - model: Transformer(
                                       (src_embed): Embedding(124, 256, padding_idx=0)
                                       (trg_embed): Embedding(36, 256, padding_idx=0)
                                       (position_embed): SinusoidalPositionalEmbedding()
                                       (encoder): TransformerEncoder(
                                         (layers): ModuleList(
                                           (0): TransformerEncoderLayer(
                                             (self_attn): MultiheadAttention(
                                               (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                                             )
                                             (linear1): Linear(in_features=256, out_features=1024, bias=True)
                                             (dropout): Dropout(p=0.3, inplace=False)
                                             (linear2): Linear(in_features=1024, out_features=256, bias=True)
                                             (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                                             (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                                             (activation_dropout): Dropout(p=0.3, inplace=False)
                                           )
                                           (1): TransformerEncoderLayer(
                                             (self_attn): MultiheadAttention(
                                               (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                                             )
                                             (linear1): Linear(in_features=256, out_features=1024, bias=True)
                                             (dropout): Dropout(p=0.3, inplace=False)
                                             (linear2): Linear(in_features=1024, out_features=256, bias=True)
                                             (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                                             (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                                             (activation_dropout): Dropout(p=0.3, inplace=False)
                                           )
                                           (2): TransformerEncoderLayer(
                                             (self_attn): MultiheadAttention(
                                               (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                                             )
                                             (linear1): Linear(in_features=256, out_features=1024, bias=True)
                                             (dropout): Dropout(p=0.3, inplace=False)
                                             (linear2): Linear(in_features=1024, out_features=256, bias=True)
                                             (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                                             (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                                             (activation_dropout): Dropout(p=0.3, inplace=False)
                                           )
                                           (3): TransformerEncoderLayer(
                                             (self_attn): MultiheadAttention(
                                               (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                                             )
                                             (linear1): Linear(in_features=256, out_features=1024, bias=True)
                                             (dropout): Dropout(p=0.3, inplace=False)
                                             (linear2): Linear(in_features=1024, out_features=256, bias=True)
                                             (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                                             (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                                             (activation_dropout): Dropout(p=0.3, inplace=False)
                                           )
                                         )
                                         (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                                       )
                                       (decoder): TransformerDecoder(
                                         (layers): ModuleList(
                                           (0): TransformerDecoderLayer(
                                             (self_attn): MultiheadAttention(
                                               (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                                             )
                                             (multihead_attn): MultiheadAttention(
                                               (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                                             )
                                             (linear1): Linear(in_features=256, out_features=1024, bias=True)
                                             (dropout): Dropout(p=0.3, inplace=False)
                                             (linear2): Linear(in_features=1024, out_features=256, bias=True)
                                             (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                                             (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                                             (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                                             (activation_dropout): Dropout(p=0.3, inplace=False)
                                           )
                                           (1): TransformerDecoderLayer(
                                             (self_attn): MultiheadAttention(
                                               (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                                             )
                                             (multihead_attn): MultiheadAttention(
                                               (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                                             )
                                             (linear1): Linear(in_features=256, out_features=1024, bias=True)
                                             (dropout): Dropout(p=0.3, inplace=False)
                                             (linear2): Linear(in_features=1024, out_features=256, bias=True)
                                             (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                                             (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                                             (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                                             (activation_dropout): Dropout(p=0.3, inplace=False)
                                           )
                                           (2): TransformerDecoderLayer(
                                             (self_attn): MultiheadAttention(
                                               (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                                             )
                                             (multihead_attn): MultiheadAttention(
                                               (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                                             )
                                             (linear1): Linear(in_features=256, out_features=1024, bias=True)
                                             (dropout): Dropout(p=0.3, inplace=False)
                                             (linear2): Linear(in_features=1024, out_features=256, bias=True)
                                             (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                                             (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                                             (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                                             (activation_dropout): Dropout(p=0.3, inplace=False)
                                           )
                                           (3): TransformerDecoderLayer(
                                             (self_attn): MultiheadAttention(
                                               (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                                             )
                                             (multihead_attn): MultiheadAttention(
                                               (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                                             )
                                             (linear1): Linear(in_features=256, out_features=1024, bias=True)
                                             (dropout): Dropout(p=0.3, inplace=False)
                                             (linear2): Linear(in_features=1024, out_features=256, bias=True)
                                             (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                                             (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                                             (norm3): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                                             (activation_dropout): Dropout(p=0.3, inplace=False)
                                           )
                                         )
                                         (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                                       )
                                       (final_out): Linear(in_features=256, out_features=36, bias=True)
                                       (dropout): Dropout(p=0.3, inplace=False)
                                     )
INFO - 08/03/22 13:39:09 - 0:00:00 - number of parameter 7424036
INFO - 08/03/22 13:39:16 - 0:00:08 - maximum training 20000 steps (800 epochs)
INFO - 08/03/22 13:39:16 - 0:00:08 - evaluate every 16 epochs
INFO - 08/03/22 13:39:16 - 0:00:08 - At 0-th epoch with lr 0.000000.
Source Batch: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], device='cuda:0')
Source Batch: tensor([ 97,  96,  96,  95,  96,  96,  96,  97,  97,  97,  96,  96,  96,  97,
         96,  97, 109,  97,  97,  96,  96,  96,  96,  96,  96,  97,  96,  97,
         96, 109, 109,  97,  96, 109,  96, 109,  96, 109,  96,  96,  96,  96,
         97, 109,  97,  96,  96,  96,  97,  96,  96,  96,  97,  96,  96, 109,
        109,  97,  97,  97,  96,  96,  97,  97, 109,  97,  97,  97,  96,  97,
         96, 109,  96,  96,  96,  97,  97,  97,  97,  96,  96,  97,  97,  97,
         97,  97,  96, 109,  97, 109, 109,  97,  97,  96,  97, 109,  96,  97,
         96,  96, 109,  97,  97,  97, 109,  96, 109,  96,  97,  96,  97,  97,
        109,  97,  96,  96, 109,  96,  97,  97,  96,  96,  97,  96,  96,  96,
         97,  97,  96,  97,  96,  96,  97,  96,  96,  97,  96,  97,  96,  96,
        109,  96, 109,  96,  97,  96,  96, 109,  97,  96,  96,  96,  97,  96,
         97,  96, 109,  96,  97,  97,  96,  96,  97,  97,  97,  97, 109,  96,
         97,  96,  97,  97,  96,  97,  97,  97,  97, 109,  97, 109,  96,  96,
        109, 109,  97,  96,  96, 109,  97,  97, 109,  96,  97, 109,  97,  96,
         96,  97,  97,  96,  97,  96, 109,  96,  97,  97, 109,  96,  96,  96,
         96,  97,  97,  97,  97,  97,  97,  96, 109,  97, 109,  97,  96,  96,
        109,  96, 109,  97,  96,  97,  97,  97,  96,  96,  96,  96,  96,  96,
         96,  97,  97,  96, 109,  96,  97,  96,  96,  97,  96,  97,  97,  96,
        109, 109,  97,  97, 109,  96,  97,  96,  97,  96,  96, 109,  96,  97,
         96,  97,  97,  96,  97,  96, 109, 109, 109, 109,  97,  96,  96,  96,
         97,  97,  97,  97,  97,  97,  96,  97,  96,  96,  96,  96,  97, 109,
         96, 109,  97,  97,  96,  96,  97,  97,  96,  97,  96,  97,  97,  96,
         96,  96,  96,  97,  97, 109,  97,  96,  96,  97,  97,  96,  96,  96,
         97, 109,  97, 109,  96,  96,  97,  96, 109, 109, 109,  96, 109,  96,
         96, 109,  97, 109,  96, 109,  96,  96,  97,  96,  97, 109,  96, 109,
         96,  97,  96, 109,  96, 109, 109,  97,  96,  97,  96,  97,  96,  97,
         97,  96,  97,  96,  97,  97,  96,  96,  97,  97,  96,  96, 109,  97,
         96,  96,  97,  97,  97, 109,  96,  97,  97,  97,  96, 109,  97,  96,
        109,  97,  97,  97,  97,  96,  97,  97], device='cuda:0')
Source Batch: tensor([110, 117, 116,  86, 111, 123, 116,  69, 110, 123, 110, 123, 110,  52,
        113,  12, 123, 123,  55, 123, 110, 123,  22, 110, 110,  52, 110, 110,
        115, 110, 123, 110, 117, 117,  50,  58, 110, 115,   8, 110,  44, 115,
        110, 110, 110,  58, 110, 117,  54,  40, 110, 110, 110, 110, 110, 123,
        110, 110, 110,  24, 123,  22, 110, 110,  58, 123, 110,  78, 110, 110,
        110, 113, 110, 123,  54,  77, 123, 110, 123, 110,   8, 123, 123, 110,
         51, 110, 123,  48, 123,  81,  50, 110, 110, 110,   8, 112, 110, 123,
        123, 123, 110, 110, 110, 110, 123,  58,  54, 110, 110, 113,  12,  11,
         50, 110,  54, 110, 110, 110, 110,  10, 113, 123, 110,   9, 110, 110,
        110, 123, 123, 123,  16, 110, 123,  49,  34, 123, 123, 123, 110,   9,
         59,   9,  48, 123, 110, 110, 110, 110, 123,  21, 110,  11, 110, 123,
        123,  58,  11, 123, 123, 110,  24, 110, 110,  52, 110,  59, 116, 113,
        110, 116, 110,  87, 110, 123, 110,  81, 123, 110,  36,  15, 110,  49,
         52, 110,  58, 123, 111, 123, 123, 110,  24, 123, 110, 110, 123, 123,
          8,  12, 123,  48, 110, 113, 123, 110, 110, 123, 123,  24, 111, 123,
        123, 110, 110, 123, 110, 123, 110,  14,  58, 123,  48, 110, 110, 123,
        123,  59, 123,  58, 123,  48, 123, 110,  16, 110, 123, 116, 123, 123,
        110, 123, 110, 112, 110, 123,  24, 110, 111, 123, 123, 123, 110, 112,
        110,  24, 123, 110,  23, 112, 110, 110,  58, 116,  11,  50, 117,  54,
        110,  56, 110, 123,  52, 110,   8, 110,  81,  16, 110, 116,  54, 110,
          8, 110,  16, 123, 110, 110, 123, 110, 116, 110,  30,  48, 123,  32,
         92,  12, 123, 110,  81, 112,  83,  17, 110, 110, 117, 110, 110, 110,
        123, 113, 110, 123,  56, 110, 110,  87, 123,  23, 110, 112,  11,  24,
         56, 123, 123,  50, 110,  54, 123,  26, 110, 110,  24,   9, 110, 123,
         71, 123,  58, 123,  16,  48, 110,  40, 110, 123,  17, 110,  34,  83,
        110,  89, 113,  49, 110,  87,  87,  58,  10,  46, 117, 123, 110, 110,
        123, 110, 110, 117, 110, 123, 110, 117,  17, 110,   9,  21,  17,   8,
        110, 123, 110,  55, 110, 123,  24, 123, 110, 110,  46, 123,  17,  48,
        110, 123,  48, 110, 110, 110, 123,  89], device='cuda:0')
Target Batch: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], device='cuda:0')
Target Batch: tensor([25, 24, 21,  9, 17, 17,  9,  9,  9, 24, 21,  9, 17, 24,  9, 12,  9,  9,
        17, 21, 11, 17, 22,  9, 24, 24, 11, 21, 24, 21, 17, 24, 17, 24,  9, 21,
         9, 24,  8, 24, 21, 21, 21, 24,  9, 21, 32, 21, 24, 24, 21, 25, 21,  9,
         9, 21, 13, 24, 21, 21, 21, 22, 21, 24, 21, 17, 24, 17,  9, 21,  9, 30,
        24, 24, 24, 21, 17, 24, 24, 17,  8, 21,  9, 21, 17, 17, 24,  9,  9,  9,
         9, 17, 21,  8, 28, 17,  9,  9, 24, 21,  9, 21, 24, 21,  9, 21, 24, 11,
        21, 31, 12, 11,  9, 24, 24,  9,  9, 24, 21, 10, 17, 17, 21,  9, 22, 17,
        21,  9, 28,  9, 16, 10,  9, 17, 34, 21, 21, 21,  9,  9, 17,  9,  9, 21,
        25, 21,  9, 24, 21, 17, 24, 11, 24, 12, 24, 21, 11,  9, 21, 21,  9, 24,
        32, 24, 21, 17, 28,  9, 21, 17, 21, 24,  9,  9, 21,  9, 17, 24,  9, 15,
        21, 17, 24, 17, 21, 17, 24, 11,  9, 17, 24,  9, 21, 32, 24, 21,  8, 14,
        24,  9, 24,  9,  9, 28, 21,  9, 21, 24, 17, 17, 21, 28, 21,  9, 17, 21,
        21, 14, 21,  9,  9, 21, 28,  9, 17, 17, 21, 21,  9,  9,  9, 21, 11, 24,
         9, 35, 24,  8,  9, 21, 24, 21, 21,  9, 21, 11, 21,  9,  9, 25, 17, 19,
        21,  9, 15, 21, 23, 24, 21, 21, 21, 24, 11,  9,  9, 24, 24, 21, 21, 24,
        24, 17,  8, 21,  9, 22, 14, 21, 24,  9, 15, 21,  9, 24, 17, 24, 21,  9,
        21, 21, 26,  9, 28, 32, 17, 12, 21, 21,  9, 21,  9, 21,  9, 24, 17, 26,
        17, 21, 17, 21, 31, 31, 21,  9, 12, 24, 19, 22, 21, 17, 11, 24, 21,  9,
        17,  9, 24, 24, 12, 17, 24, 17, 21,  9, 12, 17, 24, 24, 21, 17, 16,  9,
        21, 24,  9, 21, 17,  9, 34, 21, 21, 21, 24, 17, 21, 24, 21, 21, 10, 21,
         9, 24, 11,  9,  9, 25,  9, 17, 24,  9, 24,  9, 24, 32,  9, 24,  9,  8,
        21, 21, 21, 17,  9, 24, 21, 17, 21, 17, 21, 21, 17,  9, 17, 24,  9, 24,
        17, 21, 17, 21], device='cuda:0')
Target Batch: tensor([35,  4, 23,  4, 16, 16,  4, 19,  4,  4,  9, 20, 16,  4, 12, 20,  4, 19,
        16, 23, 18, 16, 28,  4, 12,  4, 18, 23,  4, 26, 16,  4, 21,  4,  4, 17,
         4,  4, 21, 18, 23, 23, 23,  4, 32, 11, 12, 23,  4, 12, 23,  8, 23,  4,
         4, 19, 33,  4, 23, 15, 24, 23, 23,  4,  9, 16, 20, 16,  4,  9,  4, 28,
        28,  4,  4, 23, 16, 28, 12, 23,  8, 23,  4, 16, 16, 18, 20,  4, 12,  4,
         4, 16, 24, 18, 18, 16,  4,  4,  4, 12,  4, 23,  4, 23,  4, 24,  4,  8,
        23, 21, 19, 18,  4,  4,  4,  4,  4, 12, 23, 26, 16, 16, 23, 19,  8, 16,
        23,  4, 18,  4, 12,  8,  4, 16, 17, 21, 18, 17,  4, 28, 16, 28,  4, 23,
        34, 20,  4, 12, 23, 16, 12, 10,  4, 23,  4, 11, 18,  4, 23, 23,  8, 12,
        32,  4, 24, 16, 18,  4, 23, 16,  9,  4,  4,  4, 21,  4, 16, 12, 12, 26,
        24, 16,  4, 16, 16, 25,  4, 23,  4, 16, 12, 19, 12, 32,  4, 12, 10, 35,
         4,  4,  4,  4,  4, 12, 23,  4, 23, 12, 16,  8, 11, 26, 18,  4, 16, 10,
        23, 10,  9,  4,  4, 23, 18,  4, 16, 16, 23, 12,  4,  4,  4, 31, 18,  4,
        18, 23,  4,  8, 19, 23,  4, 11, 23,  4, 28, 18, 23,  4,  4, 35, 16, 34,
        28, 12,  8, 23, 25,  4, 18, 20, 14,  4, 35,  4, 32,  4,  4, 23, 23,  4,
         4, 16, 19, 14,  4, 12, 23, 23,  4,  4,  8, 23, 16, 20, 16, 12, 28, 19,
        23, 23,  8,  4, 35, 12, 16, 20, 23, 16,  4, 23,  4,  9, 12,  4, 28, 21,
        19, 11, 16, 17, 18, 23, 23,  4, 34,  4,  8, 23, 24, 16, 35, 18, 23,  4,
        16,  4,  4,  4, 20, 28,  4, 21, 23, 12, 28, 16,  4,  4,  9, 16, 12,  4,
        28, 12,  4, 23, 28,  4, 21, 23, 23, 23, 12, 16, 23,  4, 23, 17,  8, 20,
         4,  4, 18,  4,  4, 35, 23, 23,  4, 20, 12,  4,  4, 12, 12,  4,  4, 34,
        23, 23, 23, 16,  4,  4, 28, 16, 23, 16, 20, 10, 23,  4, 16,  4,  4,  4,
        16, 25, 16, 23], device='cuda:0')
Source Batch: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], device='cuda:0')
Source Batch: tensor([ 96,  97, 109,  97,  96,  96,  97,  96,  97,  96,  97,  97,  96, 109,
         96,  97,  96,  96,  97,  97, 109,  96, 109, 109,  96,  97,  97,  97,
         96, 109,  96,  97,  96,  96,  96,  96,  96,  96,  97, 109,  96,  97,
         96,  96,  96,  96,  97,  97,  96, 109,  97,  96, 109,  96,  97,  96,
        109,  97, 109,  96,  97,  96,  96,  96,  97, 109,  97,  97,  96,  97,
         97,  97,  97,  96,  96, 109,  97,  97,  96,  97, 109,  96,  97, 109,
         96,  96, 109,  97,  96,  97, 109,  96,  97, 109,  97,  96,  97,  96,
         96,  96, 109,  96, 109,  96, 109,  96,  95,  96,  97,  97,  96,  97,
         96,  97, 109, 109,  96, 109,  96,  97,  96,  96,  96,  96,  96, 109,
         97, 109, 109,  96,  95,  97,  97, 109,  96,  96,  96,  97,  97,  96,
         96,  96, 109, 109,  96, 109,  97,  97,  97,  97,  97,  96,  97,  96,
        109, 109,  96,  96,  97,  97,  96,  96, 109, 109,  97, 109, 109,  97,
         96,  97,  97,  96,  96,  96, 109,  97,  97, 109,  96, 109,  97,  96,
         97, 109,  96,  97,  96,  96,  96,  97,  96,  96,  96,  97,  96,  96,
         96, 109,  97,  96,  97,  97,  96,  96, 109,  96,  97,  97,  97,  97,
         97, 109,  97,  97,  97,  97, 109,  96,  96,  97,  97,  96,  96,  97,
         96, 109,  96,  96,  96,  97,  96, 109,  96,  96,  96,  97,  96,  96,
         96,  96,  96,  97,  97, 109,  97, 109,  96,  96,  97, 109, 109,  96,
         97,  97,  96, 109, 109,  97,  97,  96,  96,  97, 109,  97, 109,  97,
         97,  97,  97,  96, 109,  97,  96,  96,  96,  97,  96,  97,  97, 109,
        109,  96, 109,  96,  96,  96, 109,  97, 109,  97,  96,  97,  96,  96,
         97,  95,  97,  97,  96,  97,  97, 109,  97,  96,  96, 109,  96,  97,
         97, 109,  97,  97,  96,  96, 109,  97,  96,  97,  96,  97,  97,  96,
        109, 109,  97, 109,  96,  97,  97,  96,  97,  97,  96,  96,  96,  95,
         96,  97,  96,  96,  96,  97,  97,  97,  96,  96, 109,  97,  96,  96,
         96,  96,  97,  96,  96,  96, 109,  97,  96,  97,  97, 109, 109,  96,
         97,  97,  96,  97,  96, 109,  96,  96,  96,  97, 109,  97, 109,  96,
         97,  96,  96, 109, 109,  97,  97, 109,  96,  97,  96,  97,  97, 109,
         97,  96,  97,  96,  97,  96,  97,  96], device='cuda:0')
Source Batch: tensor([110, 110,  58, 123, 123, 110, 110, 110, 110, 123, 110, 110, 123, 112,
         89, 123, 110, 123, 110, 123, 110,  87, 123,   8,  34,  59,  16, 123,
         56,  28, 123,  21, 111, 123,  28, 123,  21, 117, 110,  54, 123, 110,
        110,   8, 110,  48,  31, 110, 110,   9, 110, 123,  52, 110,  48, 123,
        123, 123,  54, 123, 110,  24, 123, 123, 110,  15, 123, 123,  52, 110,
          9, 110, 110,  15, 110, 110, 110, 110, 110,  56, 110, 123, 110, 117,
        117, 115, 110, 123, 110,  58,   9, 123, 110, 111,  12,  11, 110,  55,
         21, 115, 123,  50, 123, 110, 110, 123,   8, 110,  17, 110,  45,  56,
          9, 110,  22, 110, 110, 110,   9, 110, 110,   9,  56, 110, 115, 123,
        123,  58,  51, 123,  81, 123,  56, 110, 111, 111, 123,  79, 110,  48,
         40, 110,  49,  50, 110,  48, 123,   9, 110, 123, 123, 117,   8, 123,
        110, 123, 110, 110, 110, 123, 110, 110,  28,  58, 123, 110, 110,   9,
        113, 110, 110, 112, 123,  44,  91,  50,  41, 110,  48, 117, 123,  48,
        110, 123, 110,  28, 112, 123, 112, 110,  54, 112, 116, 110, 123,  52,
         11, 112, 110,  91,  50,  24, 123, 117,  21,  42, 110, 123, 110,  31,
        123, 110, 123, 110, 110,  56,  21, 110, 111, 110,  58, 110, 116, 123,
        110, 111, 110,   8, 110, 110, 117,  31,  58, 111,  21,  24,  58,  48,
        123, 123, 113,  21, 110,  87, 123, 117,  54,  85,  85, 110, 123, 110,
         54, 123,  14,  54,   9, 110,  17, 123,  69, 123,  12, 123, 117, 110,
        110, 123, 110, 110, 123,  48,  49,   9, 113, 110,  17, 123, 110, 113,
        123, 110,  91, 110,  17, 123,  56, 110, 123, 123, 110,  30, 112, 110,
        123,  20, 110, 110,  21, 110, 123,  23, 123,  52, 123, 123, 110, 110,
        110, 115, 123, 110, 112,  44, 123, 110, 110, 110, 110, 110, 110, 123,
         51,  21, 110,  54, 110, 110,  53, 110, 110,  56, 110, 123, 110,  12,
        115, 123, 112, 123, 110, 110,  51,   9, 110, 115, 112, 123,  24, 110,
        110, 110, 123, 110, 110, 110, 116,  58, 110, 123,  87,  48, 111, 123,
         44, 110, 123,  56, 111, 110,  56, 110, 110,   9, 123, 110, 115, 110,
        123, 110, 123, 110, 123, 110, 110, 110,  56, 110,  50, 123, 123, 110,
        123, 123,  10,   9, 123, 110, 110,  85], device='cuda:0')
Target Batch: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], device='cuda:0')
Target Batch: tensor([21,  9, 21, 24, 24, 17, 21, 24, 17, 22, 21, 21, 17,  8, 21,  9, 21, 21,
        17,  9,  9, 24, 11,  8, 34, 17, 28, 24, 21, 28, 24, 17, 17,  9, 28,  9,
        17, 24, 17, 24, 21, 21,  9, 28, 21,  9, 31,  9, 24,  9, 21, 17, 24, 24,
         9, 17, 24, 23, 24, 35, 21, 24, 32, 24,  9, 15, 16,  9, 24, 24,  9, 21,
        21, 15, 11, 24,  8,  9, 15, 21, 24, 28, 24,  9, 24, 14,  9, 21, 21, 21,
         9, 24,  9,  9, 12, 11, 24, 17,  9,  9,  9,  9, 24,  9,  9, 24,  8, 21,
        21, 24, 17, 21,  9, 21, 22, 17, 21, 17, 31, 24, 21,  9, 21, 30, 21, 21,
         9, 21, 17, 24, 21, 21, 21, 24,  9, 24,  9, 21, 17,  9, 24,  9, 17,  9,
        21,  9, 24, 24, 21, 21, 17, 34, 17, 17, 17, 21, 17, 17, 32, 21,  9,  9,
        28, 21, 24,  9,  8, 11, 30, 24, 28,  9, 12, 21, 21,  9, 17, 24,  9, 24,
        21,  9, 21, 24, 21, 28, 21,  9, 17,  9, 24,  9,  9, 21,  9, 24, 11, 21,
        15, 21,  9, 24,  9, 24, 21, 24, 24, 21, 11, 31, 32, 21,  9, 21, 17, 21,
        21, 23, 24, 17, 21, 17,  9, 21,  9, 17, 24,  8, 17, 21, 17, 31, 21, 17,
        24, 21, 21,  9, 15, 11, 21,  9, 21, 24, 17, 24, 24, 24, 21, 34, 21, 21,
        24, 24, 14, 24, 12, 24,  9,  9,  9,  9, 12, 34, 17, 21, 21, 11, 11,  9,
        17,  9, 17,  9, 21, 24, 21, 24, 21, 21, 21,  9, 21, 24, 21,  9, 21, 24,
        21, 17, 24, 30,  9,  9, 21, 21,  9,  9, 17, 21, 21, 23, 24, 24, 17, 17,
        11,  9, 32, 17,  8, 24, 24, 21, 21,  9,  9, 24, 17, 21,  9,  9, 17, 21,
        21, 24,  9, 24, 17, 21, 21, 21, 15, 21, 21, 17, 19, 17, 24,  9, 21, 24,
        17,  9, 21, 24,  8, 22, 24, 24, 24, 21,  9, 21, 17,  9, 28, 21, 28, 24,
        24,  9, 32, 24, 21, 24,  9, 21, 17, 21, 21, 24, 24,  9,  9, 14,  9, 21,
        10, 21,  9, 24,  9, 24,  9,  9, 21, 28,  9, 21,  9,  9, 24, 28, 10, 17,
        17,  9, 21, 17], device='cuda:0')
Target Batch: tensor([23, 12, 11,  4,  4, 16, 23,  4, 16, 28, 23, 23, 16, 18, 23,  4,  9, 23,
        16,  4,  4,  4, 18, 19,  8, 16, 10,  4, 23, 28,  4, 16, 16,  4, 18,  4,
        18,  4, 16,  4, 20, 17, 20, 10, 20,  4, 23, 23,  4, 20, 28, 16,  4, 12,
         4, 16,  4, 25,  4, 23, 28, 18,  4,  4,  4, 17, 12,  4,  4,  4, 23, 24,
        25,  8,  8,  4, 19,  4, 26, 23,  4, 18,  4,  4,  4, 17,  4, 23, 23,  9,
        32,  4,  4,  4, 23, 26,  4, 16,  4,  4,  4,  4, 19,  4, 20,  4, 18, 16,
        28,  4, 16, 23,  4, 17, 12, 16, 23, 16, 18,  4, 24, 18, 23, 28, 15, 23,
         4,  9, 16,  4, 23, 17, 23, 28,  4,  4,  4, 18, 16,  4, 12,  4, 16,  4,
        23,  4, 18,  4, 23, 28, 18, 21, 19, 16, 16, 23, 16, 16, 12, 17,  4,  4,
         8, 17, 20,  4, 19,  8, 35,  4, 20,  4, 23, 23,  8,  4, 16,  4,  4,  4,
        16,  4, 23,  8, 23, 20, 23,  4, 16,  4,  4,  4, 12, 23,  4,  4,  8, 31,
        26, 28,  4, 10,  4,  4, 25, 12, 12, 26, 16, 23, 19, 23,  4, 23, 16, 23,
         9, 25,  4, 16, 17, 16,  4, 23,  4, 16, 20, 19, 16,  8, 16, 23, 31, 16,
         4, 23, 24,  4,  8, 18, 23,  4, 23,  4, 16,  4,  4,  4, 23, 21, 23, 11,
         4,  4, 35,  4, 19,  4,  4,  4, 19,  4, 19, 34, 16, 24, 17, 23, 35,  4,
        16,  4, 16, 28, 23,  4, 11,  4, 17, 17, 24,  4, 24,  4, 23,  4, 23,  4,
        20, 18,  4, 28,  4,  4, 25, 23,  4, 19, 16, 17, 23, 25, 12,  4, 16, 16,
        26,  4,  4, 18, 19,  4,  4, 23, 23,  4,  4,  4, 19, 23, 19,  4, 16, 19,
        23,  4,  4,  4, 16, 23, 23, 23, 26, 23, 23, 16, 34, 18,  4,  4, 24, 18,
        16, 16, 23,  4, 34, 23, 23,  4, 12,  9, 12,  8, 16, 20, 28, 22,  8,  4,
         4,  4, 32,  4, 23, 20,  4, 23, 16, 21, 23, 20, 10, 32,  4, 17,  4, 23,
         8, 23, 32, 12, 23,  4,  4,  4, 23, 10,  4, 23,  4, 12,  4, 12, 26, 16,
        16,  4, 23, 16], device='cuda:0')
Source Batch: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], device='cuda:0')
Source Batch: tensor([ 97,  97,  96,  96, 109,  96,  97, 109, 109, 109,  96, 109,  97,  97,
         96, 109,  97,  96,  97,  97,  97, 109, 109, 109,  97,  97,  96,  96,
         97,  97,  96,  95,  97,  97,  97,  97,  96,  97,  96, 109,  97,  96,
         97,  96,  97,  97,  96,  97,  96,  96,  97,  97,  96,  97, 109,  97,
         97,  97, 109,  97,  97, 109,  97,  97,  97,  96,  97,  96,  96,  97,
         97,  97,  96,  96,  97,  96,  97,  96,  97,  96,  96,  97,  96,  95,
         97,  96,  96,  96,  96, 109,  96,  97,  97, 109,  96,  97,  97,  97,
         97,  96,  97,  96,  97,  97,  97,  96,  97,  97,  96,  96, 109,  96,
         97, 109,  96,  96,  96,  96, 109,  96,  96, 109,  96, 109,  97,  96,
         96,  97,  97,  96,  96,  96,  96,  97,  96,  97,  97,  97,  96,  96,
        109,  97,  96,  97,  97, 109, 109,  97,  97, 109,  97,  97,  97, 109,
         97,  96,  96,  96,  97,  97,  96,  97, 109,  96,  97,  96, 109,  96,
         97,  96,  97,  97, 109,  95,  96, 109,  96,  96, 109,  96,  96,  96,
         97,  96,  97,  96,  97, 109,  97,  97,  97,  97,  97,  97,  96, 109,
         97,  96,  97, 109,  96, 109,  96,  96,  97,  96,  96, 109,  96, 109,
         97,  97,  97,  97,  96,  97,  97,  97, 109,  96,  96,  96,  96,  97,
         96, 109,  97,  97,  97,  96,  96,  96,  96,  97,  96,  97,  96,  96,
        109,  97,  97,  97,  96,  96,  96,  96,  97, 109,  97,  96,  97,  96,
         96, 109,  97,  96,  97,  97,  97,  96,  97,  97, 109,  97, 109,  97,
         96,  97, 109,  97,  97,  96,  96,  96,  96,  97,  97,  97,  97,  97,
         96,  97,  97,  96, 109,  96,  96,  97, 109, 109,  96, 109, 109,  97,
         97,  97,  95,  97,  96,  96,  97, 109, 109,  96,  97, 109, 109,  96,
         96,  96,  97, 109,  97,  96,  97,  96, 109, 109,  96,  96,  96,  97,
         96,  97,  97,  97,  97,  97,  96,  96,  96,  97, 109,  97,  96,  97,
         96,  96,  96,  96,  97,  97,  96,  96, 109,  96, 109,  96,  97,  96,
        109,  96, 109,  97,  96,  97,  97, 109,  97,  97,  95, 109,  96,  96,
         97,  97,  97,  96, 109,  96,  96,  96, 109,  97,  96,  97,  96,  97,
        109,  96,  97, 109,  96,  97,  97, 109, 109, 109, 109, 109,  96,  96,
         97, 109, 109,  97,  97,  97,  97,  96], device='cuda:0')
Source Batch: tensor([110,  21, 110,  78, 123,  48, 123, 113, 111,  21, 110,  57, 110, 110,
         89, 123, 123,  91, 110,  56,  11,  56, 110, 106, 123, 110,  50, 116,
         85, 110, 110,  35, 110, 110, 123, 110,  48, 110, 110, 110, 123,  48,
          9, 110,  54,  54, 116, 110,  52, 110, 123, 123, 123,  73,  56, 110,
        110, 110, 110, 110, 110,  54, 110,  54,   8, 123, 123, 116, 112, 123,
        123,  51, 110,  52, 123, 110, 123, 110,  50, 115,  86, 123, 110,  17,
        123,  52,   9,  52, 110, 123, 116,  22,  56, 110, 110, 110, 110, 110,
        110, 123, 123, 123, 110,  15, 123, 110,  17,  83, 110,  48, 123, 123,
          9, 110, 123, 112, 123, 110, 110, 117, 110, 110, 112, 110, 110, 110,
         56, 110,  58, 115,  58, 110, 123, 123,  26, 123,  81,  50, 123, 116,
        123, 110, 123, 110,  51, 110, 110, 110, 110,  77, 123,   8, 110,  48,
         11, 123, 110, 123, 123,  45, 110,  52,  23, 123, 110, 115, 110, 110,
        123, 123, 110,  50,  87,  16, 116, 110,  44, 110, 110, 123,  53,  77,
         70,  50, 110, 110, 110, 111, 110, 110,  56, 110,  56, 110,  24, 115,
        123, 110, 123, 123, 123,  46,  44, 123, 110, 110, 110, 110, 123,  50,
         77,  24, 123,  58, 123,  34,  54,   9, 123,  17,  50, 110, 110, 110,
        110, 117, 123, 110, 123, 113, 110,  91, 110, 110, 123,  52, 123,  91,
        110, 110,  58,  50, 110, 123, 110, 110,  11,  50, 123,  54, 110,  52,
         58, 123,   8, 110, 110, 110, 123, 110,  56,  17,   8, 123,  50, 110,
        110,  11, 116, 110, 110, 110, 123, 115, 123,  50,  57,  56, 123, 110,
        123, 123,  54, 110, 115, 123,   9,  44, 123,  54,  80,  11, 117, 110,
         56, 110,   9, 123, 123,  24,  82, 110, 116, 110, 123, 110,  21, 110,
        110,  54,  52,  50,  48,  17, 110, 116, 123,  24,   8,  54, 123,  48,
        123, 110, 110, 110,  17, 123, 123, 123, 112,  52, 117,  58, 116,  87,
         31,  48, 110,  50, 123,  35, 123, 110,  21, 113,  58,  35, 123, 123,
         18, 123,  17, 110, 110,  11, 123,  56,  53,  52,  16,  50, 110, 110,
        123,  85, 110, 111, 113, 110, 110, 110,  56,   9,  58, 123, 110,  87,
         57,   9, 110, 112,  32,  56, 110,  56, 123, 110, 111,  17, 123,  46,
         17,  48,  17,  79, 123, 123, 110, 110], device='cuda:0')
Target Batch: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], device='cuda:0')
Target Batch: tensor([21, 21, 24, 17, 25,  9, 31, 21, 15, 21, 24, 17, 24, 17, 24, 24, 21, 21,
        21, 21, 11, 21, 10, 21, 21, 14,  9, 21, 24, 24,  9, 35, 17, 17, 25, 15,
         9, 17, 21, 32,  9,  9,  9,  9, 24, 24, 10, 24, 24,  9, 24,  9, 24, 24,
        21,  9, 24, 24, 24, 25, 11, 24, 17, 24,  8, 24,  9, 21, 24,  8, 17, 17,
         9, 24, 11,  9, 21, 24,  9, 21, 24,  9, 17, 24, 24, 24,  9, 24, 14,  9,
         9, 22, 21, 32, 17,  9, 24, 11, 17, 24, 16, 21, 21, 15, 21,  9, 17,  9,
         9,  9, 21, 21,  9, 10, 24, 17, 22, 14, 21,  9, 24,  9, 17,  9,  9, 17,
        21,  9, 21, 17, 21,  9, 21, 24,  9, 24,  9,  9, 21, 24, 12, 21, 12, 11,
        17, 21, 24,  9, 17, 21,  9, 15, 21,  9, 11,  9, 22, 11, 21, 17, 21, 24,
         8, 17, 24,  9, 21, 21, 17,  9, 24,  9, 24, 21, 35,  9, 21, 24, 17, 11,
        17, 21, 17,  9, 21,  9,  9, 24,  9, 24, 21, 32, 21, 24, 24, 32, 21, 17,
        21,  9, 17, 21, 21, 24, 21, 21,  9,  9, 10,  9, 21, 24,  9, 21, 24, 17,
        24, 21,  9, 17,  9, 21, 21, 24,  9,  9, 24, 21, 24, 21, 24, 24, 21, 30,
        21, 24, 21, 21, 11,  9, 21,  9, 15, 17, 21, 24, 11,  9, 24, 24,  9, 24,
        21, 11,  8, 21,  9,  9, 14, 21, 21, 17,  8, 21,  9, 21, 17, 11, 21, 24,
        24, 21, 24, 21,  9,  9, 17, 21, 11, 14, 21, 24, 24, 24, 21, 17, 28, 21,
        17, 24, 17, 11, 24, 34, 21,  8, 14, 21, 24, 21, 17,  9, 21, 24, 28, 17,
        24, 24, 21, 24, 24,  9,  9, 17, 21, 14, 24,  9,  8, 24, 21,  9,  9,  9,
        21, 21, 17, 11, 21,  9, 24, 24,  9, 21, 17,  9, 31,  9, 31,  9, 17, 35,
        17, 21, 21, 21, 21, 35, 13, 21, 12, 24, 17,  8, 21, 11, 24, 21, 17, 24,
         9,  9, 14, 21, 24, 24, 17, 21, 24, 24,  9, 17, 21,  9, 21, 24, 31, 24,
        17,  9, 11, 10, 32, 21, 17, 21, 32, 11, 21, 17,  9, 21, 17,  9, 17, 21,
        14, 14,  9, 21], device='cuda:0')
Target Batch: tensor([ 9, 19,  4, 16, 19,  4, 23, 11,  8, 23,  4, 16, 20, 16,  4, 28,  8, 11,
        23, 23, 18, 23,  8, 23, 23, 16,  4, 23,  4,  4, 19, 20, 16, 18, 12,  8,
         4, 16, 23, 21,  4,  4, 23,  4,  4,  4,  8, 20,  4,  4, 12,  4,  4, 20,
        23,  4, 28,  4, 19,  8, 28,  4, 16,  4, 34,  4,  4,  9, 20, 34, 16, 16,
         4,  4, 18,  4, 23,  4,  4, 11, 12,  4, 19,  4,  4,  4, 32,  4, 23,  4,
         4,  8, 23, 28, 19, 12,  4, 10, 16,  4, 12, 23, 23, 26, 23,  4, 25,  4,
         4,  4, 24, 23, 18, 28,  4, 16,  8, 20, 21,  4,  4,  4, 16,  4,  4, 16,
        23,  4, 17, 16, 17,  4, 23,  4, 23, 12,  4,  4, 12, 12, 20,  9, 20, 16,
        16,  9,  4,  4, 16, 23,  4,  8, 23,  4,  8,  4,  8, 18, 31, 16, 28,  4,
        19, 16,  4, 19, 22, 23, 25, 12,  4,  4,  4, 28, 28,  4, 23,  4, 16, 35,
        16, 23, 16,  4, 23,  4, 12,  4,  4,  4, 23, 21, 23,  4, 28, 28, 11, 16,
        32,  4, 16, 20, 23, 12,  9, 20,  4, 32, 27,  4, 23,  4,  4, 17,  4, 25,
         4, 11,  4,  8,  4, 23, 23, 12,  4,  4,  4, 24,  8, 23, 32,  4, 20, 28,
         8,  4, 22,  9, 28,  4, 22,  4, 17, 16, 24,  4, 23,  4,  4,  4,  4,  4,
         8, 18, 19,  4,  4, 12, 23, 14, 23, 23, 19, 23,  4, 17, 34, 18, 23,  4,
         4, 19,  4, 30,  4,  4, 16, 23,  8, 35, 21, 18,  4,  4, 23, 16, 12, 23,
        16,  4, 16, 18,  4,  8, 23, 34, 23, 23,  4, 23, 16,  4, 23,  4, 18, 16,
         4,  4, 23,  4,  4,  4,  4, 10, 23, 28,  8,  4,  8,  4, 35,  4,  4,  4,
         9, 23, 21, 35, 23, 12,  4,  4,  4, 28, 18,  4, 18,  4, 23,  4, 16, 23,
        16, 23, 11, 23, 17, 23, 33, 17, 23,  4, 23, 23, 19, 23,  4, 23, 16,  4,
         4,  4, 10, 11,  4,  4, 16,  8, 23,  4, 19, 16, 23, 19, 24,  4, 28,  4,
        16,  4, 26, 22, 12, 23, 16, 23, 12, 28, 23, 16,  4, 21, 21,  4, 18, 18,
        17, 35,  4, 23], device='cuda:0')
Source Batch: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], device='cuda:0')
Source Batch: tensor([ 97,  96,  97,  96,  96, 109, 109,  97,  96, 109,  97,  97, 109,  97,
         97,  97,  96,  97,  97,  96,  96,  97, 109,  96,  96,  96, 109,  97,
         97,  96,  97,  96,  96,  96,  96,  97, 109,  97, 109,  97,  96,  97,
         96, 109,  97, 109,  96,  97,  96,  97,  97, 109,  97, 109,  96,  96,
         96,  97,  97,  97, 109,  96,  96,  97, 109,  96,  96,  96, 109,  97,
         97,  97,  96,  97,  97,  96, 109,  97,  97,  97, 109,  96,  97,  97,
         96,  97,  96,  96,  97, 109,  97,  96, 109,  96,  96,  96,  96, 109,
         96,  96,  97,  96,  96,  97, 109,  96,  97,  96,  97, 109,  97,  95,
         97, 109,  97,  97,  96, 109,  96,  97,  96,  96,  97,  97,  97, 109,
         97,  96,  97,  96,  96, 109, 109,  96, 109,  96,  97, 109, 109,  96,
         96,  97,  96, 109,  96, 109,  96,  96,  96, 109,  96, 109,  96, 109,
         97, 109,  96,  96,  96,  96,  96,  97,  97,  96, 109,  96,  97,  96,
        109, 109, 109,  97, 109,  97,  96,  96, 109, 109,  97,  97, 109,  97,
         96,  97,  97,  97, 109,  97,  96,  97,  96,  96, 109,  96,  97,  96,
         96, 109,  97,  96,  96,  96,  96, 109,  96,  96,  96,  97,  96,  96,
         97, 109,  97,  97,  97, 109,  96,  97, 109,  96,  96,  96,  97,  97,
         96,  97,  97,  97, 109,  96,  96,  96,  97,  96,  96,  96,  96,  96,
         97,  96, 109,  97,  96,  97,  97,  96,  96,  96,  96,  97,  96,  96,
        109,  96,  96,  96,  97,  96,  97, 109,  96,  97,  97,  96,  97,  97,
         96, 109, 109,  97,  97,  97, 109,  96,  96,  97,  96,  96,  96,  96,
        109, 109,  97,  96,  96,  97,  97,  96, 109,  96,  97, 109,  96,  97,
        109,  97,  97, 109,  97,  96,  97,  97,  97, 109,  97,  96,  96, 109,
         97,  97, 109,  97,  96, 109,  97,  96,  96,  96, 109,  96,  97, 109,
         96,  96, 109,  97,  96, 109,  97,  96,  96,  96,  96,  97,  97,  96,
         97,  97, 109, 109,  96,  97,  96,  96,  97, 109,  96,  97,  96,  96,
         96, 109,  97,  96,  96,  97,  96,  97, 109,  97,  97,  96,  96,  97,
         97,  96,  97,  96,  96,  96,  96,  97,  96,  97,  96,  97,  97,  96,
         97,  96,  97,  97,  97,  96,  96,  96,  96, 109,  97, 109,  96,  96,
        109,  96, 109,  96,  97,  97,  97, 109], device='cuda:0')
Source Batch: tensor([110, 110, 110, 123,  48,  90,  89,   8,  54, 123,  50, 110, 116,  56,
         56, 110,  46, 110, 110, 123,  87, 123,   9, 110, 123,  52, 110, 110,
        110,  50, 110, 110,  35, 110, 123, 110, 115,  32, 110, 110, 123,  52,
         84,  75,  53, 112,  21, 110, 123,  56, 110,  81, 110, 123,  14, 110,
        110,  48,  35, 123, 113,  17, 110, 110, 117, 115, 116, 117,  58,   9,
        110,  54, 110,  17, 110,  48, 110, 110, 110,  22, 116,  85,  58, 123,
        123, 123, 110,  50,  24,  38, 110, 110, 123, 110, 123, 110,  82, 123,
        115, 112, 123,  58, 117,  42,  48,  85, 110, 110,  48, 123,  58,  17,
        110, 110, 110, 110, 112, 110, 123,  11, 123, 113,  35,  37,  50,  57,
         26, 110, 123,  24,  28, 123,  49, 110, 110, 110,  21, 123,  17, 112,
        110, 110, 110, 110, 110, 110, 110,  82, 110,  58, 110, 123, 113, 110,
        110, 123,   9,  11, 110, 110, 113, 110, 110, 123, 110, 123, 123, 123,
        110,  14, 110, 123, 115, 110, 123, 115, 110, 110,  44, 110, 110, 123,
        112, 123, 110, 110, 110,   9, 110, 110, 116, 110,  52, 123, 110,  48,
        110, 117, 110, 123,  28,  21, 123, 110,  58, 113,  56,  79, 116, 110,
         50, 110, 110, 110, 110, 111,  87,  50, 123, 123, 123,  50, 123, 110,
        110, 110, 110,  15,  11,  48, 117, 123,  48, 111,  48,  52, 115, 110,
         56, 110, 123, 110, 116,  49, 110, 123, 110, 123,  54, 110, 110, 116,
         58,  77, 123, 110, 110, 123, 110, 110, 110, 110, 110, 123, 110, 123,
        123, 115, 117, 123,  14, 110, 112, 110, 111, 110, 123, 110,  56, 110,
         56,  52,  58,  28, 110, 110, 110, 123, 123,  55,  69, 123, 123, 110,
         24, 123, 110, 110, 110, 110,  58,  57, 110, 123, 110, 123, 110,  56,
        110,  50,  42,  50,  56,  17, 123, 110, 110,  48,  11,  24,  56, 111,
         24, 123,  91,  50,  32,  58, 123,  54,  50,  11, 123, 110, 110, 123,
        123, 123, 110, 110, 110, 123, 110,  58, 123, 113,  52,   8, 123,  21,
        110,  50, 110,  56,  17,  90, 123,  87, 104, 123, 110,  17,  58,  50,
        123, 110, 110, 110, 110, 116, 110,  24, 113, 110, 123, 123, 123, 110,
        110, 110, 110,  54, 110,  48, 115,  52, 111, 115, 110, 113, 123,  90,
         17,  44, 112,  24,  24, 110, 123,  89], device='cuda:0')
Target Batch: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], device='cuda:0')
Target Batch: tensor([17, 24, 24,  9,  9, 24, 21, 11, 24, 10,  9, 17, 21, 21, 21, 21, 21,  9,
         9, 24, 24,  9, 17, 21, 24, 24,  9, 17, 14,  9, 21, 31, 32, 15,  9, 21,
         9, 32, 24, 21, 17, 24, 17, 24, 17, 17,  9, 24, 17, 21, 24,  9, 14, 21,
        14, 17, 21,  9, 21, 17,  9, 17,  9, 14, 21, 21, 22, 22, 21, 24, 32, 24,
        17, 24,  8,  9, 21, 24, 21, 22, 24, 24, 21, 17, 24,  9, 31,  9, 24,  9,
        21, 28, 24, 24,  9,  9,  9,  9, 23, 24, 24, 21, 21, 24,  9, 24, 24, 21,
         9, 17, 21,  9, 17, 21, 28, 24, 24, 17,  9, 11, 21, 24, 35, 17,  9, 17,
        26,  9, 24, 21, 28,  9, 17,  9, 17, 17, 21,  8, 25, 22, 14, 11, 21,  9,
        24,  9,  9, 17,  9, 21,  9,  9, 26, 11, 17, 24,  9, 11,  9, 21, 21,  9,
        24, 24,  9, 24, 24, 15,  9, 14, 24, 21,  9,  9,  9, 14, 21, 24, 21, 21,
        24, 17,  9, 17, 21, 21, 24,  9, 24, 10,  9, 17, 24, 17, 28,  9, 22, 31,
        17, 17, 28, 21, 24, 21, 21,  9, 21, 21, 21, 21,  9, 22, 24, 24, 24, 10,
        21,  9,  9, 24, 21,  9,  9, 19, 24, 24, 21, 15, 11,  9, 17,  9,  9, 21,
         9, 24, 17, 21, 21, 21, 24, 25, 17, 17, 21,  9, 17, 24, 24, 21,  9, 21,
        21, 21, 21, 12, 24, 24, 21, 11,  9,  9, 24,  9,  9, 24, 24, 17, 24,  8,
        14, 21, 21, 17, 21, 24,  9, 17, 21, 21, 21, 24, 21, 28, 11, 21, 21, 21,
        21, 17,  9, 21, 21, 21,  9,  9,  9, 25,  9,  9, 21, 17, 24, 24,  9, 17,
        21, 21, 24,  9, 24,  9, 21, 21, 24, 21, 21,  9, 11, 21, 21, 17, 24,  9,
        21,  9, 32, 21, 17, 24,  9, 11, 22, 21, 17, 24, 21, 32, 21,  9,  9, 17,
        15, 21, 21, 21, 24, 17,  9, 21, 21,  9, 25, 21, 24, 17, 24, 24, 17, 11,
        21, 24, 21,  9, 11,  9, 24, 21, 24,  9, 21, 24, 21, 21, 21,  9,  9, 17,
        21,  9, 24, 24, 21,  9,  9, 24, 28, 17, 24, 24,  9, 21, 17, 21, 21, 24,
        24, 17,  9, 21], device='cuda:0')
Target Batch: tensor([16,  4,  4,  4,  4,  4, 23, 18,  4,  8,  4, 23, 23, 23, 23, 16, 20,  4,
         4,  4,  4,  4, 16, 23,  4,  4,  4, 16, 35,  4, 28, 23, 32, 26,  4, 16,
         4, 32,  4, 23, 16,  4, 16, 20, 16, 16,  4,  4, 28, 23,  4,  4, 20, 23,
        28, 16, 24,  4, 35, 21,  4, 18,  4, 12, 24, 28,  8, 28, 10,  4, 32,  4,
        16, 28,  4,  4, 23,  4, 23,  8,  4,  4, 25, 16,  4,  4, 23,  4,  4, 12,
        17, 20, 12,  4,  4,  4,  4,  4, 25,  4,  4,  9, 24, 12,  4,  4,  4, 21,
         4, 16,  9,  4, 16, 23, 26, 12,  4, 16,  4,  8, 23,  4, 23, 16,  4, 16,
        35,  4, 12, 18, 18,  4, 16,  4, 16,  8, 17, 34, 19,  8, 20,  8, 21,  4,
        12,  4,  4, 16,  4,  9,  4,  4, 21, 28, 16, 20, 20, 18,  4,  9, 14,  4,
        12,  4,  4,  4,  4,  4,  4, 12,  4, 18,  4, 18,  4, 17, 17,  4, 23, 23,
         4, 16,  4, 16, 25, 14, 12, 19,  4, 28,  4, 16,  4, 16, 18,  4,  8, 21,
        18, 23, 18, 23,  4, 20, 17,  4, 23, 18, 23, 23,  4,  8,  4, 23,  4,  8,
        23,  4,  4,  4, 23,  4,  4, 34,  4,  4,  9, 26, 18,  4, 16, 12,  4, 23,
         4,  4, 25, 23, 23, 23,  4, 35, 16, 16, 23,  4, 16, 20,  4,  8,  4, 23,
        31, 23, 23, 20, 23,  4, 12,  8,  4, 12,  4,  4,  4, 18,  4, 34,  4, 28,
        17, 16, 23, 19, 23,  4,  4, 16, 23,  9, 23,  4, 14, 18,  8, 23, 23, 23,
         4, 16, 19, 23, 23, 23,  4,  4,  4, 35,  4,  4, 24, 16,  4, 23, 19, 18,
        17, 23,  4,  4, 12,  4, 23, 23,  4, 23, 30,  4, 35, 24, 23, 16, 10,  4,
        30,  4, 21, 17, 16,  4,  4, 18, 23, 23, 16, 20, 23, 12, 23,  4,  4, 16,
         8, 30, 23, 23,  4, 18,  4, 23, 23,  4, 19, 23,  4, 16,  4,  4, 16, 26,
        12,  4, 24,  4, 28, 12,  4, 18,  4, 19, 23,  4, 10, 21, 24,  4, 32, 16,
        25, 12, 20,  4, 16,  4,  4,  4, 18, 18,  4, 28,  4, 20, 19, 23,  9,  4,
        28, 16,  4, 23], device='cuda:0')
