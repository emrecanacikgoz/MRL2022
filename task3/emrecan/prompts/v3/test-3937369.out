Setting stack size to unlimited...
core file size          (blocks, -c) 0
data seg size           (kbytes, -d) unlimited
scheduling priority             (-e) 0
file size               (blocks, -f) unlimited
pending signals                 (-i) 2061307
max locked memory       (kbytes, -l) unlimited
max memory size         (kbytes, -m) 20971520
open files                      (-n) 51200
pipe size            (512 bytes, -p) 8
POSIX message queues     (bytes, -q) 819200
real-time priority              (-r) 0
stack size              (kbytes, -s) unlimited
cpu time               (seconds, -t) unlimited
max user processes              (-u) 4096
virtual memory          (kbytes, -v) unlimited
file locks                      (-x) unlimited

Wed Aug  3 22:01:10 2022       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 470.57.02    Driver Version: 470.57.02    CUDA Version: 11.4     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  Tesla T4            Off  | 00000000:40:00.0 Off |                    0 |
| N/A   35C    P0    27W /  70W |      0MiB / 15109MiB |      5%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
Using pad_token, but it is not set yet.
Namespace(lang='tur', lr=5e-05, model='gpt2', model_name_or_path='sberbank-ai/mGPT', plm_eval_mode=False, run=3)
{
  "guid": 0,
  "label": null,
  "meta": {},
  "text_a": "bizi abartmaz m\u0131ym\u0131\u015f?",
  "text_b": "",
  "tgt_text": "abartmak:INFR;PRS;HAB;NOM(3,SG);NEG;Q;ACC(1,PL)"
}

[[{'text': 'bizi abartmaz mıymış?', 'loss_ids': 0, 'shortenable_ids': 1}, {'text': '<mask>', 'loss_ids': 1, 'shortenable_ids': 0}], {'guid': 0, 'tgt_text': 'abartmak:INFR;PRS;HAB;NOM(3,SG);NEG;Q;ACC(1,PL)'}]
tokenizing: 0it [00:00, ?it/s]tokenizing: 190it [00:00, 1892.89it/s]tokenizing: 401it [00:00, 2019.35it/s]tokenizing: 616it [00:00, 2075.97it/s]tokenizing: 826it [00:00, 2081.26it/s]tokenizing: 1035it [00:00, 2070.56it/s]tokenizing: 1254it [00:00, 2108.58it/s]tokenizing: 1468it [00:00, 2115.28it/s]tokenizing: 1687it [00:00, 2135.81it/s]tokenizing: 1901it [00:00, 2131.26it/s]tokenizing: 2119it [00:01, 2145.67it/s]tokenizing: 2338it [00:01, 2158.80it/s]tokenizing: 2558it [00:01, 2169.89it/s]tokenizing: 2775it [00:01, 2135.03it/s]tokenizing: 2994it [00:01, 2150.67it/s]tokenizing: 3213it [00:01, 2161.96it/s]tokenizing: 3430it [00:01, 2153.85it/s]tokenizing: 3646it [00:01, 2120.77it/s]tokenizing: 3859it [00:01, 1638.04it/s]tokenizing: 4074it [00:02, 1763.09it/s]tokenizing: 4288it [00:02, 1860.90it/s]tokenizing: 4503it [00:02, 1938.17it/s]tokenizing: 4716it [00:02, 1990.93it/s]tokenizing: 4926it [00:02, 2020.39it/s]tokenizing: 5133it [00:02, 2034.56it/s]tokenizing: 5343it [00:02, 2053.14it/s]tokenizing: 5558it [00:02, 2079.98it/s]tokenizing: 5770it [00:02, 2089.93it/s]tokenizing: 5986it [00:02, 2109.88it/s]tokenizing: 6203it [00:03, 2125.83it/s]tokenizing: 6417it [00:03, 2123.49it/s]tokenizing: 6630it [00:03, 2115.01it/s]tokenizing: 6847it [00:03, 2129.50it/s]tokenizing: 7061it [00:03, 2118.76it/s]tokenizing: 7275it [00:03, 2121.32it/s]tokenizing: 7488it [00:03, 2101.68it/s]tokenizing: 7699it [00:03, 2091.56it/s]tokenizing: 7909it [00:03, 2078.08it/s]tokenizing: 8121it [00:03, 2087.83it/s]tokenizing: 8336it [00:04, 2103.22it/s]tokenizing: 8551it [00:04, 2115.29it/s]tokenizing: 8769it [00:04, 2132.44it/s]tokenizing: 8983it [00:04, 2100.21it/s]tokenizing: 9194it [00:04, 2076.87it/s]tokenizing: 9402it [00:04, 2052.13it/s]tokenizing: 9608it [00:04, 2047.17it/s]tokenizing: 9833it [00:04, 2106.76it/s]tokenizing: 9993it [00:04, 2070.68it/s]
tokenizing: 0it [00:00, ?it/s]tokenizing: 427it [00:00, 4268.14it/s]tokenizing: 854it [00:00, 4242.29it/s]tokenizing: 1000it [00:00, 4248.06it/s]
tokenizing: 0it [00:00, ?it/s]tokenizing: 524it [00:00, 5239.37it/s]tokenizing: 1000it [00:00, 5254.16it/s]Epoch 0, global_step 500 average loss: 21.054285818099977 lr: 4.749874937468735e-05
Epoch 0, global_step 1000 average loss: 4.595512095332146 lr: 4.499749874937469e-05
Epoch 0, global_step 1500 average loss: 1.8699642545059323 lr: 4.2496248124062035e-05
acc: 0.779
Epoch 1, global_step 2000 average loss: 1.210243238016963 lr: 3.9994997498749375e-05
Epoch 1, global_step 2500 average loss: 0.9047107769297436 lr: 3.749374687343672e-05
Epoch 1, global_step 3000 average loss: 0.7045156154113356 lr: 3.499249624812406e-05
Epoch 1, global_step 3500 average loss: 0.6279532024667133 lr: 3.249124562281141e-05
acc: 0.807
Epoch 2, global_step 4000 average loss: 0.4818545530497213 lr: 2.9989994997498748e-05
Epoch 2, global_step 4500 average loss: 0.37753039747322326 lr: 2.7488744372186094e-05
Epoch 2, global_step 5000 average loss: 0.40550981914424483 lr: 2.4987493746873438e-05
Epoch 2, global_step 5500 average loss: 0.2514859361448325 lr: 2.248624312156078e-05
acc: 0.809
Epoch 3, global_step 6000 average loss: 0.316160559667871 lr: 1.9984992496248124e-05
Epoch 3, global_step 6500 average loss: 0.20366569277962115 lr: 1.748374187093547e-05
Epoch 3, global_step 7000 average loss: 0.19454307937182602 lr: 1.4982491245622812e-05
Epoch 3, global_step 7500 average loss: 0.1997566509216631 lr: 1.2481240620310155e-05
acc: 0.822
Epoch 4, global_step 8000 average loss: 0.1306141093288461 lr: 9.979989994997498e-06
Epoch 4, global_step 8500 average loss: 0.09435370399924432 lr: 7.478739369684842e-06
Epoch 4, global_step 9000 average loss: 0.09089848033624003 lr: 4.977488744372186e-06
Epoch 4, global_step 9500 average loss: 0.11020585324436251 lr: 2.47623811905953e-06
acc: 0.816
Epoch 5, global_step 10000 average loss: 0.10136404693058285 lr: 0.0
Epoch 5, global_step 10500 average loss: 0.04517845395343466 lr: 0.0
Epoch 5, global_step 11000 average loss: 0.06674677334171429 lr: 0.0
Epoch 5, global_step 11500 average loss: 0.053438100779669186 lr: 0.0
acc: 0.816
Epoch 6, global_step 12000 average loss: 0.06899171761440812 lr: 0.0
Epoch 6, global_step 12500 average loss: 0.050405060491146285 lr: 0.0
Epoch 6, global_step 13000 average loss: 0.0571385389573843 lr: 0.0
Epoch 6, global_step 13500 average loss: 0.05160845879192493 lr: 0.0
acc: 0.816
Epoch 7, global_step 14000 average loss: 0.07567975286986621 lr: 0.0
Epoch 7, global_step 14500 average loss: 0.049652281212351226 lr: 0.0
Epoch 7, global_step 15000 average loss: 0.0705232665540534 lr: 0.0
Epoch 7, global_step 15500 average loss: 0.054515353521012 lr: 0.0
acc: 0.816
Epoch 8, global_step 16000 average loss: 0.05234127121057827 lr: 0.0
Epoch 8, global_step 16500 average loss: 0.053443587907451726 lr: 0.0
Epoch 8, global_step 17000 average loss: 0.07312615786140668 lr: 0.0
Epoch 8, global_step 17500 average loss: 0.07252222751185036 lr: 0.0

/kuacc/users/eacikgoz17/.conda/envs/eacikgoz17/lib/python3.8/site-packages/transformers/optimization.py:306: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  warnings.warn(
acc: 0.816
DeprecationWarning: 'source deactivate' is deprecated. Use 'conda deactivate'.
